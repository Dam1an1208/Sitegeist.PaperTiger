prototype(Sitegeist.PaperTiger:Error) < prototype(Neos.Fusion:Component) {

  class = ${Configuration.setting("Sitegeist.PaperTiger.rendering.classes.error")}

  customErrorMessage = ${q(node).property('customErrorMessage')}
  customErrorMessageEnabled = ${q(node).property('customErrorMessageEnabled')}

  translationPackage = 'Neos.Flow'
  translationSource = 'ValidationErrors'

  result = null

  renderer = Neos.Fusion:Case {

    override {
      condition = Neos.Fusion:CanRender {
        type = 'Sitegeist.PaperTiger:Error.Override'
      }
      renderer = Sitegeist.PaperTiger:Error.Override {
        @apply.props = ${props}
      }
    }

    customErrorMessage {
      condition = ${props.customErrorMessageEnabled && props.customErrorMessage}
      renderer = afx`
        <ul class={props.class}>
            <li>{props.customErrorMessage}</li>
        </ul>
      `
    }

    default {
      condition = true
      renderer = Neos.Fusion.Form:ErrorRenderer {
        class = ${props.class}
        result = ${props.result}
        translationPackage = ${props.translationPackage}
        translationSource = ${props.translationPackage}
      }
    }
  }
}


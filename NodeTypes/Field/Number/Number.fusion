prototype(Sitegeist.PaperTiger:Field.Number) < prototype(Neos.Neos:ContentComponent) {
    name = ${q(node).property('name')}
    label = ${q(node).property('label')}
    placeholder = ${q(node).property('placeholder')}
    isRequired = ${q(node).property('isRequired')}
    minimumValue = ${q(node).property('minimumValue')}
    maximumValue = ${q(node).property('maximumValue')}
    customErrorMessageEnabled = ${q(node).property('customErrorMessageEnabled')}
    customErrorMessage = ${q(node).property('customErrorMessage')}

    renderer = afx`
        <Sitegeist.PaperTiger:FieldContainer
            field.name={props.name}
            label={props.label}
        >
            <Neos.Fusion.Form:Input
                attributes.type="number"
                attributes.required={props.isRequired}
                attributes.placeholder={props.placeholder || false}
                attributes.min={props.minimumValue ? props.minimumValue : false}
                attributes.max={props.minimumValue ? props.maximumValue : false}
                attributes.oninvalid={"this.setCustomValidity('" + props.customErrorMessage + "')"}
                attributes.oninvalid.@if={props.customErrorMessageEnabled}
                attributes.oninput={"this.setCustomValidity('')"}
                attributes.oninput.@if={props.customErrorMessageEnabled}
                attributes.id={'field_' + field.name}
            />
        </Sitegeist.PaperTiger:FieldContainer>
    `
}

prototype(Sitegeist.PaperTiger:Field.Upload.Schema) < prototype(Neos.Fusion:Component) {
  isRequired = ${q(node).property('isRequired')}
  fileValidatorOptions = Neos.Fusion:DataStructure {
    allowedExtensions = ${q(node).property('allowedExtensions')}
    allowedExtensions.@if.isDefined = ${q(node).property('allowedExtensions')}

    maximumSize = ${q(node).property('allowedFilesize') || null}
    maximumSize.@if.isDefined = ${q(node).property('allowedFilesize')}
  }

  renderer = ${Form.Schema.forType('Sitegeist\\FusionForm\\Upload\\Domain\\CachedUploadedFile')}
  renderer.@process.addIsRequired = ${props.isRequired ?  value.required : value}
  renderer.@process.addFileValidator = ${props.fileValidatorOptions ? value.validator('Sitegeist.FusionForm.Upload:UploadedFile', props.fileValidatorOptions) : value}
}

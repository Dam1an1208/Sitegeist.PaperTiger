prototype(Sitegeist.PaperTiger:Field.Date.Schema) < prototype(Neos.Fusion:Component) {
    isRequired = ${q(node).property('isRequired')}
    dateRangeValidatorOptions = Neos.Fusion:DataStructure {
        earliestDate = ${q(node).property('earliestDate')}
        earliestDate.@if.isDefined = ${q(node).property('earliestDate')}
        earliestDate.@process.asString = ${Date.format(value, 'Y-m-d')} 
        latestDate = ${q(node).property('latestDate')}
        latestDate.@if.isDefined = ${q(node).property('latestDate')}
        latestDate.@process.asString = ${Date.format(value, 'Y-m-d')} 
    }

    renderer = ${Form.Schema.date()}
    renderer.@process.addIsRequired = ${props.isRequired ?  value.required : value}
    renderer.@process.addDateRangeValidator = ${Array.length(props.dateRangeValidatorOptions) ? value.validator('DateTimeRange', props.dateRangeValidatorOptions) : value}
}

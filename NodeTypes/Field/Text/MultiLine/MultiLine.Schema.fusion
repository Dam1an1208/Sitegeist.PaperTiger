prototype(Sitegeist.PaperTiger:Field.Text.MultiLine.Schema) < prototype(Neos.Fusion:Value) {
  value = ${Form.Schema.string()}

  value.@process.addIsRequired.@if.isSet = ${q(node).property('isRequired')}
  value.@process.addIsRequired = ${value.required}

  value.@process.addStringLengthValidator.@if.isSet = ${q(node).property('minimumLength') || q(node).property('maximumLength')}
  value.@process.addStringLengthValidator = ${value.validator('StringLength', Array.concat(q(node).property('minimumLength') ? {minimum: q(node).property('minimumLength')} : {}, q(node).property('maximumLength') ? {maximum: q(node).property('maximumLength')} : {}))}
}
